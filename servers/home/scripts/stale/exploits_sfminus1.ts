/* eslint-disable @typescript-eslint/no-unused-vars */
// noinspection JSUnusedLocalSymbols,AssignmentToFunctionParameterJS,MagicNumberJS

let ns: NS;
let doc: Document;

function unclickable() {
  const unclickableDiv = doc.querySelector<HTMLDivElement>("#unclickable");
  if (!unclickableDiv) {
    throw new Error("The unclickable div is missing from the DOM!");
  }
  unclickableDiv.style.display = "block";
  unclickableDiv.style.visibility = "visible";
  unclickableDiv.style.backgroundColor = "red";
  unclickableDiv.addEventListener("click", () => {
    unclickableDiv.style.display = "none";
    unclickableDiv.style.visibility = "hidden";
  });
}

function undocumented() {
  // @ts-expect-error exploiting
  // eslint-disable-next-line @typescript-eslint/no-unsafe-call
  ns.exploit();
}

function rainbow() {
  // @ts-expect-error exploiting
  // eslint-disable-next-line @typescript-eslint/no-unsafe-call
  ns.rainbow("noodles");
}

function bypass() {
  // @ts-expect-error exploiting
  // eslint-disable-next-line @typescript-eslint/no-unsafe-call
  ns.bypass(doc);
}

function alterReality() {
  // Use browser developer tools to edit source code or value of variable x
}

function prototypeTampering() {
  // eslint-disable-next-line @typescript-eslint/unbound-method
  const originalFunction = Number.prototype.toExponential;
  Number.prototype.toExponential = function (fractionDigits?: number) {
    return originalFunction.apply(this, [fractionDigits]) as string + " ";
  };
}

function timeCompression() {
  const originalFunction = window.setTimeout;
  window.setTimeout = function (handler: TimerHandler, timeout?: number, ...args: unknown[]): number {
    if (timeout === 15000) {
      timeout = 250;
    }
    // eslint-disable-next-line @typescript-eslint/no-unsafe-return
    return originalFunction.apply(this, [handler, timeout, ...args]);
  };
}

function trueRecursion() {
  // Make sure you have SF1, then go to Arcade, it will load https://bitburner-official.github.io/bitburner-legacy/
  // Open Developer tools and change line in bundle.js:
  // From: parent.postMessage(__WEBPACK_IMPORTED_MODULE_22__Player_js__["a"].sourceFiles.length > 0, "*")
  // To: parent.postMessage(true, "*")
  // Alternative ways: anything that make Legacy version thinks that you have at least 1 SF. Eg: destroy BN1, edit
  // save file, ...
}

export function main(nsContext: NS): void {
  ns = nsContext;
  doc = globalThis["document"];

  // unclickable();
  // undocumented();
  // rainbow();
  // bypass();
  // prototypeTampering();
  // timeCompression();
}
